{"version":3,"sources":["Components/Header/Header.tsx","Components/DataHeader/DataHeader.tsx","Components/List/List.tsx","Components/FavStates/FavStates.tsx","Components/Chart/Chart.tsx","Components/MainPart/MainPart.jsx","Components/footer/footer.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["Header","props","Navbar","bg","variant","Brand","href","Dataheader","Container","style","fontSize","fontStyle","margin","background","Row","Col","summary","total","confirmedCasesIndian","confirmedCasesForeign","discharged","deaths","ListItem","ddata","states","length","map","state","className","key","loc","width","high","onClick","fav","addToFav","medium","low","FavListItem","meduim","Chart","data","chartData","Mainpart","Object","favstates","labels","datasets","label","backgroundColor","num","Math","round","random","r","g","b","console","log","this","bind","getData","d","s","a","undefined","find","push","getRandomColor","res","divider_h","divider_m","addTotalAndFav","checkHighLow","temp_states","temp_favstates","i","setState","JSON","window","localStorage","getItem","fav_temp","parse","axios","get","then","manipulateData","regional","event","setItem","stringify","location","reload","DataHeader","List","Component","Footer","App","MainPart","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ae577b71.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Navbar } from \"react-bootstrap\";\r\n\r\nfunction Header(props :any) {\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\">\r\n      <Navbar.Brand href=\"#\">COVID 19 Tracker - India</Navbar.Brand>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Container, Col, Row } from \"react-bootstrap\";\r\n\r\nfunction Dataheader(props :any ) {\r\n  return (\r\n    <Container\r\n      style={{\r\n        fontSize: \"150%\",\r\n        fontStyle: \"bold\",\r\n        margin: \"10px 0px 10px 0px\",\r\n        background: \"#FFFFFF\"\r\n      }}\r\n    >\r\n      <Row>\r\n        <Col>Total : {props.summary.total}</Col>\r\n        <Col>Indians : {props.summary.confirmedCasesIndian}</Col>\r\n        <Col>Foreign : {props.summary.confirmedCasesForeign}</Col>\r\n        <Col>Discharged : {props.summary.discharged}</Col>\r\n        <Col>Deaths : {props.summary.deaths}</Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Dataheader;\r\n","import React from \"react\";\r\n\r\nfunction ListItem(props :any) {\r\n    const ddata =\r\n        props.states.length > 0\r\n            ? props.states.map((state :any) => {\r\n                return (\r\n                    <div\r\n                        className=\"card m-2\"\r\n                        key={state.loc}\r\n                        style={{ width: \"300px\" }}\r\n                    >\r\n                        {\r\n                            state.high === true ?\r\n                                <h5\r\n                                    className=\"card-header btn bg-danger text-white\"\r\n                                    onClick={() => !state.fav && props.addToFav(state.loc)}\r\n                                >\r\n                                    {state.loc}\r\n                                </h5>\r\n                                :\r\n                                state.medium === true ?\r\n                                    <h5\r\n                                        className=\"card-header btn bg-warning\"\r\n                                        onClick={() => !state.fav && props.addToFav(state.loc)}\r\n                                    >\r\n                                        {state.loc}\r\n                                    </h5>\r\n                                    :\r\n                                    <h5\r\n                                        className=\"card-header btn bg-primary\"\r\n                                        onClick={() => !state.fav && props.addToFav(state.loc)}\r\n                                    >\r\n                                        {state.loc}\r\n                                    </h5>\r\n                        }\r\n                        <div className=\"card-body\">\r\n                            <ul className=\"list-group\">\r\n                                <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                                    Total\r\n                                    {\r\n                                        state.high === true ?\r\n                                            <span className=\"badge badge-danger badge-pill\">\r\n                                                {state.total}\r\n                                            </span>\r\n                                            :\r\n                                            state.low === true ?\r\n                                                <span className=\"badge badge-warning badge-pill\">\r\n                                                    {state.total}\r\n                                                </span>\r\n                                                :\r\n                                                <span className=\"badge badge-primary badge-pill\">\r\n                                                    {state.total}\r\n                                                </span>\r\n                                    }\r\n                                </li>\r\n                                <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                                    Confirmed Cases Indian\r\n                                    {\r\n                                        state.high === true ?\r\n                                            <span className=\"badge badge-danger badge-pill\">\r\n                                                {state.confirmedCasesIndian}\r\n                                            </span>\r\n                                            :\r\n                                            state.low === true ?\r\n                                                <span className=\"badge badge-warning badge-pill\">\r\n                                                    {state.confirmedCasesIndian}\r\n                                                </span>\r\n                                                :\r\n                                                <span className=\"badge badge-primary badge-pill\">\r\n                                                    {state.confirmedCasesIndian}\r\n                                                </span>\r\n                                    }\r\n                                </li>\r\n                                <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                                    Confirmed Cases Foreign\r\n                                    {\r\n                                        state.high === true ?\r\n                                            <span className=\"badge badge-danger badge-pill\">\r\n                                                {state.confirmedCasesForeign}\r\n                                            </span>\r\n                                            :\r\n                                            state.low === true ?\r\n                                                <span className=\"badge badge-warning badge-pill\">\r\n                                                    {state.confirmedCasesForeign}\r\n                                                </span>\r\n                                                :\r\n                                                <span className=\"badge badge-primary badge-pill\">\r\n                                                    {state.confirmedCasesForeign}\r\n                                                </span>\r\n                                    }\r\n                                </li>\r\n                                <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                                    Discharged\r\n                                    {\r\n                                        state.high === true ?\r\n                                            <span className=\"badge badge-danger badge-pill\">\r\n                                               {state.discharged}\r\n                                            </span>\r\n                                            :\r\n                                            state.low === true ?\r\n                                                <span className=\"badge badge-warning badge-pill\">\r\n                                                    {state.discharged}\r\n                                                </span>\r\n                                                :\r\n                                                <span className=\"badge badge-primary badge-pill\">\r\n                                                    {state.discharged}\r\n                                                </span>\r\n                                    }\r\n                                </li>\r\n                                <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                                    Deaths\r\n                                    {\r\n                                        state.high === true ?\r\n                                            <span className=\"badge badge-danger badge-pill\">\r\n                                               {state.deaths}\r\n                                            </span>\r\n                                            :\r\n                                            state.low === true ?\r\n                                                <span className=\"badge badge-warning badge-pill\">\r\n                                                   {state.deaths}\r\n                                                </span>\r\n                                                :\r\n                                                <span className=\"badge badge-primary badge-pill\">\r\n                                                   {state.deaths}\r\n                                                </span>\r\n                                    }\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            })\r\n            : \"\";\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row w-100 mt-2\">{ddata}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ListItem;\r\n","import React from \"react\";\r\n\r\nfunction FavListItem(props: any) {\r\n  const ddata =\r\n    props.states.length > 0\r\n      ? props.states.map((state: any) => {\r\n          return (\r\n            <div\r\n              className=\"card m-2\"\r\n              key={state.loc}\r\n              style={{ width: \"300px\" }}\r\n            >\r\n              {state.high === true ? (\r\n                <h5 className=\"card-header btn bg-danger text-white\">\r\n                  <i className=\"fa fa-star\" />\r\n                  {state.loc}\r\n                </h5>\r\n              ) : state.meduim === true ? (\r\n                <h5 className=\"card-header btn bg-warning\">\r\n                  <i className=\"fa fa-star\" />\r\n                  {state.loc}\r\n                </h5>\r\n              ) : (\r\n                <h5 className=\"card-header btn bg-primary\">\r\n                  <i className=\"fa fa-star\" />\r\n                  {state.loc}\r\n                </h5>\r\n              )}\r\n              <div className=\"card-body\">\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                    Total\r\n                    {state.high === true ? (\r\n                      <span className=\"badge badge-danger badge-pill\">\r\n                        {state.total}\r\n                      </span>\r\n                    ) : state.low === true ? (\r\n                      <span className=\"badge badge-warning badge-pill\">\r\n                        {state.total}\r\n                      </span>\r\n                    ) : (\r\n                      <span className=\"badge badge-primary badge-pill\">\r\n                        {state.total}\r\n                      </span>\r\n                    )}\r\n                  </li>\r\n                  <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                    Confirmed Cases Indian\r\n                    {state.high === true ? (\r\n                      <span className=\"badge badge-danger badge-pill\">\r\n                        {state.confirmedCasesIndian}\r\n                      </span>\r\n                    ) : state.low === true ? (\r\n                      <span className=\"badge badge-warning badge-pill\">\r\n                        {state.confirmedCasesIndian}\r\n                      </span>\r\n                    ) : (\r\n                      <span className=\"badge badge-primary badge-pill\">\r\n                        {state.confirmedCasesIndian}\r\n                      </span>\r\n                    )}\r\n                  </li>\r\n                  <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                    Confirmed Cases Foreign\r\n                    {state.high === true ? (\r\n                      <span className=\"badge badge-danger badge-pill\">\r\n                        {state.confirmedCasesForeign}\r\n                      </span>\r\n                    ) : state.low === true ? (\r\n                      <span className=\"badge badge-warning badge-pill\">\r\n                        {state.confirmedCasesForeign}\r\n                      </span>\r\n                    ) : (\r\n                      <span className=\"badge badge-primary badge-pill\">\r\n                        {state.confirmedCasesForeign}\r\n                      </span>\r\n                    )}\r\n                  </li>\r\n                  <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                    Discharged\r\n                    {state.high === true ? (\r\n                      <span className=\"badge badge-danger badge-pill\">\r\n                        {state.discharged}\r\n                      </span>\r\n                    ) : state.low === true ? (\r\n                      <span className=\"badge badge-warning badge-pill\">\r\n                        {state.discharged}\r\n                      </span>\r\n                    ) : (\r\n                      <span className=\"badge badge-primary badge-pill\">\r\n                        {state.discharged}\r\n                      </span>\r\n                    )}\r\n                  </li>\r\n                  <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                    Deaths\r\n                    {state.high === true ? (\r\n                      <span className=\"badge badge-danger badge-pill\">\r\n                        {state.deaths}\r\n                      </span>\r\n                    ) : state.low === true ? (\r\n                      <span className=\"badge badge-warning badge-pill\">\r\n                        {state.deaths}\r\n                      </span>\r\n                    ) : (\r\n                      <span className=\"badge badge-primary badge-pill\">\r\n                        {state.deaths}\r\n                      </span>\r\n                    )}\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          );\r\n        })\r\n      : \"\";\r\n\r\n  return (\r\n    props.states.length !== 0 && (\r\n      <div className=\"container mb-lg-5\">\r\n        <div className=\"row w-100 mt-2\">{ddata}</div>\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default FavListItem;\r\n","import React from \"react\";\r\nimport { Pie } from \"react-chartjs-2\";\r\n\r\nfunction Chart(props: any) {\r\n  return <Pie data={props.chartData} />;\r\n}\r\n\r\nexport default Chart;\r\n","import React, { Component } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport DataHeader from \"../DataHeader/DataHeader\";\r\nimport List from \"../List/List\";\r\nimport FavListItem from \"../FavStates/FavStates\";\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nclass Mainpart extends Component {\r\n  state = {\r\n    summary: Object,\r\n    states: [],\r\n    favstates: [],\r\n    chartData: {\r\n      labels: [],\r\n      datasets: [{ data: [], label: \"\", backgroundColor: [] }],\r\n    },\r\n  };\r\n\r\n  async getRandomColor() {\r\n    var num = Math.round(0xffffff * Math.random());\r\n    var r = num >> 16;\r\n    var g = (num >> 8) & 255;\r\n    var b = num & 255;\r\n    console.log(\"'rgba(\" + r + \", \" + g + \", \" + b + \", 0.6\" + \")'\");\r\n    return \"rgba(\" + r + \", \" + g + \", \" + b + \", 0.6\" + \")\";\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.addToFav.bind(this);\r\n    this.getData();\r\n  }\r\n\r\n  async addTotalAndFav(d) {\r\n    this.state.chartData.datasets[0].label = \"State\";\r\n    await d.map(async (s) => {\r\n      s.fav = this.state.fav.find((loc) => loc === s.loc) !== undefined;\r\n      s.total = s.confirmedCasesIndian + s.confirmedCasesForeign;\r\n      this.state.chartData.labels.push(s.loc);\r\n      this.state.chartData.datasets[0].data.push(s.total);\r\n      this.state.chartData.datasets[0].backgroundColor.push(\r\n        await this.getRandomColor()\r\n      );\r\n      return s;\r\n    });\r\n    return d;\r\n  }\r\n\r\n  async checkHighLow(res) {\r\n    let high = 0;\r\n    res.map((state) => {\r\n      if (high < state.total) {\r\n        high = state.total;\r\n      }\r\n      return state;\r\n    });\r\n    /* Break into  three modules starting from 1 to highest in country \r\n            ----------  highest  ------------- middle --------- low(1)\r\n                red    divider_h    yellow     divider_m     \r\n        */\r\n    let divider_h = high - (high - 1) / 3,\r\n      divider_m = high - 2 * ((high - 1) / 3);\r\n    res.map((state) => {\r\n      if (state.total >= divider_h) state.high = true;\r\n      else if (state.total > divider_m) state.medium = true;\r\n      return state;\r\n    });\r\n    return res;\r\n  }\r\n\r\n  async manipulateData(res) {\r\n    res = await this.checkHighLow(await this.addTotalAndFav(res));\r\n    let temp_states = this.state.states;\r\n    let temp_favstates = this.state.favstates;\r\n\r\n    for (let i = 0; i < res.length; i++) {\r\n      if (res[i].fav) {\r\n        temp_favstates.push(res[i]);\r\n      } else {\r\n        temp_states.push(res[i]);\r\n      }\r\n    }\r\n    this.setState({ states: temp_states, favstates: temp_favstates });\r\n  }\r\n\r\n  async getData() {\r\n    let fav_temp = JSON.parse(\r\n      await window.localStorage.getItem(\"covidstatesfav\")\r\n    );\r\n    if (fav_temp === undefined || fav_temp === null) this.setState({ fav: [] });\r\n    else this.setState({ fav: fav_temp });\r\n    await axios\r\n      .get(\"https://api.rootnet.in/covid19-in/stats/latest\")\r\n      .then((res) => {\r\n        return res.data.data;\r\n      })\r\n      .then((res) => {\r\n        this.setState({ summary: res.summary });\r\n        this.manipulateData(res.regional);\r\n        //this.setState({ data: res.regional });\r\n      });\r\n  }\r\n\r\n  async addToFav(event) {\r\n    this.state.fav.push(event);\r\n    window.localStorage.setItem(\r\n      \"covidstatesfav\",\r\n      JSON.stringify(this.state.fav)\r\n    );\r\n    window.location.reload();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <DataHeader summary={this.state.summary} />\r\n        <Chart chartData={this.state.chartData} />\r\n        <FavListItem states={this.state.favstates} getData={this.getData} />\r\n        <List\r\n          states={this.state.states}\r\n          getData={this.getData}\r\n          addToFav={this.addToFav.bind(this)}\r\n        />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Mainpart;\r\n","import React from \"react\";\r\n\r\nfunction Footer(props :any) {\r\n  return (\r\n    <div className=\"footer-copyright bg-dark text-white text-center py-3\">\r\n      @ Rishabh Anand\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Header from './Components/Header/Header';\r\nimport MainPart from \"./Components/MainPart/MainPart\"\r\nimport Footer from \"./Components/footer/footer\"\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <MainPart />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}